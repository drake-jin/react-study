{
  "beautify.language": {
    "js": {
      "type": ["javascript", "json"],
      "filename": [".jshintrc", ".jsbeautifyrc"],
      "ext": ["js", "json"],
      "indent_size": 2,
      "indent_char": " "
    },
    "css": {
      "ext": ["css", "scss"],
      "indent_char": " ",
      "indent_size": 2
    },
    "html": {
      "ext": ["htm", "html"],
      "indent_char": "tab",
      "indent_size": 1
    },
    "jsx": {
      "formatJSX": true, //Duh! that's the default
      "attrsOnSameLineAsTag": false, // move each attribute to its own line
      "maxAttrsOnTag": 3, // if lower or equal than 3 attributes, they will be kept on a single line
      "firstAttributeOnSameLine": true, // keep the first attribute in the same line as the tag
      "formatJSXExpressions": true, // default true, if false jsxExpressions won't be recursively formatted
      "JSXExpressionsSingleLine": true, // default true, if false the JSXExpressions might span several lines
      "alignWithFirstAttribute": false, // do not align attributes with the first tag
      "spaceInJSXExpressionContainers": " ", // default to one space. Make it empty if you don't like spaces between JSXExpressionContainers
      "removeSpaceBeforeClosingJSX": false, // default false. if true <React.Something /> => <React.Something/>
      "closingTagOnNewLine": false, // default false. if true attributes on multiple lines will close the tag on a new line
      "JSXAttributeQuotes": "", // possible values "single" or "double". Leave it as empty string if you don't want to modify the attributes' quotes
      "htmlOptions": {
        // put here the options for js-beautify.html
      }
    }
    // ^^ providing just an array sets the VS Code file type
  },
  "react.beautify.onSave": "true",
  "react.beautify.formatter": "prettydiff", //and esformatter. default value is prettydiff.
  "react.beautify.configFilePath": ".jsbeautifyrc"

}